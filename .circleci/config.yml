aliases:
  # Docker image tags can be found here: https://circleci.com/developer/images/image/cimg/android
  - &cimg cimg/android:2023.08.1-node
  # Most used according to https://gs.statcounter.com/android-version-market-share/mobile-tablet/worldwide
  - &default-api-level 33

  - &gradle-cache-key
      gradle-cache-v2-{{ checksum "build.gradle.kts" }}-{{
      checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{
      checksum "libs/SalesforceAnalytics/build.gradle.kts" }}-{{
      checksum "libs/SalesforceSDK/build.gradle.kts" }}-{{
      checksum "libs/SmartStore/build.gradle.kts" }}-{{
      checksum "libs/MobileSync/build.gradle.kts" }}-{{
      checksum "libs/SalesforceHybrid/build.gradle.kts" }}-{{
      checksum "libs/SalesforceReact/build.gradle.kts" }}

  - &restore-gradle-cache
    keys:
      - *gradle-cache-key

  - &restore-node-cache
    keys:
      - node-cache-{{ checksum "package.json" }}

  - &restore-ruby-cache
    keys:
      - ruby-gem-cache-{{ .BuildNum }}
      - ruby-gem-cache-

  - &save-gradle-cache
    key: *gradle-cache-key
    paths:
      - .gradle
      - /home/circleci/.gradle

  - &save-node-cache
    key: node-cache-{{ checksum "package.json" }}
    paths:
      - node_modules

  - &save-ruby-cache
    key: ruby-gem-cache-{{ .BuildNum }}
    paths:
      - /home/circleci/.rubies

  - &setup-env
    name: Setup Environment
    command: |
      sudo npm i npm@latest -g
      sudo npm install -g shelljs@0.8.5
      sudo npm install -g cordova@12.0.0
      sudo npm install -g typescript
      cordova telemetry off
      ./install.sh
      sudo chmod -R a+w /var/lib/gems/ && sudo chmod -R a+w /usr/local/bin
      gem install bundler
      gem install danger
      gem install danger-junit
      gem install danger-android_lint
      gem install danger-jacoco
      echo $TEST_CREDENTIALS > ./shared/test/test_credentials.json

version: 2.1
executors:
  linux:
    working_directory: ~/SalesforceMobileSDK-Android
    docker:
      - image: *cimg
    environment:
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"'

jobs:
  static-analysis:
    executor: linux
    steps:
      - checkout
      - restore_cache: *restore-gradle-cache
      - restore_cache: *restore-node-cache
      - restore_cache: *restore-ruby-cache
      - run:
          name: Setup Environment
          command: |
            ./install.sh
            sudo chmod -R a+w /var/lib/gems/ && sudo chmod -R a+w /usr/local/bin
            gem install bundler
            gem install danger
            gem install danger-junit
            gem install danger-android_lint
            gem install danger-jacoco
            echo $TEST_CREDENTIALS > ./shared/test/test_credentials.json
      - run:
          name: Run Android Lint
          command: ./gradlew lint
          when: always
      - run:
          name: Run Danger
          command: |
            if [[ $CIRCLE_BRANCH == *"pull"* ]]; then
                # These env vars are not set properly on rebuilds
                export CIRCLE_PULL_REQUEST="https://github.com/forcedotcom/SalesforceMobileSDK-Android/${CIRCLE_BRANCH}"
                export CIRCLE_PULL_REQUESTS="https://github.com/forcedotcom/SalesforceMobileSDK-Android/${CIRCLE_BRANCH}"
                export CI_PULL_REQUEST="https://github.com/forcedotcom/SalesforceMobileSDK-Android/${CIRCLE_BRANCH}"
                export CI_PULL_REQUESTS="https://github.com/forcedotcom/SalesforceMobileSDK-Android/${CIRCLE_BRANCH}"
                danger --dangerfile=.circleci/Dangerfile_PR.rb --danger_id=PR-Check --verbose
            else
                echo "No need to run Danger."
            fi
      - save_cache: *save-gradle-cache
      - save_cache: *save-node-cache
      - save_cache: *save-ruby-cache

  run-tests:
    executor: linux
    parameters:
      lib:
        type: enum
        enum: [ "SalesforceAnalytics", "SalesforceSDK", "SmartStore", "MobileSync", "SalesforceHybrid", "SalesforceReact" ]
        default: "SalesforceAnalytics"
      api_level:
        type: integer
        default: *default-api-level
      pr:
        type: boolean
        default: false
    steps:
      - checkout
      - restore_cache: *restore-gradle-cache
      - restore_cache: *restore-node-cache
      - restore_cache: *restore-ruby-cache
      - run: *setup-env
      - when:
          condition: << parameters.pr >>
          steps:
            - run:
                name: Determine Tests to Run
                command: |
                  LIBS_TO_TEST=$(ruby .circleci/gitChangedLibs.rb)
                  echo -e "export LIBS_TO_TEST=${LIBS_TO_TEST}" >> "${BASH_ENV}"

                  # Check if tests should run
                  if [[ ${LIBS_TO_TEST} == *"<< parameters.lib >>"* ]]; then
                      echo -e "\n\nLibraries to Test-> ${LIBS_TO_TEST//","/", "}."
                  else
                      echo -e "\n\nNo need to test << parameters.lib >> for this PR, stopping execution."
                      circleci step halt
                  fi
      - run:
          name: Build for Testing
          command: |
            ./gradlew libs:SalesforceAnalytics:assembleAndroidTest
            ./gradlew libs:SalesforceSDK:assembleAndroidTest
            ./gradlew libs:SmartStore:assembleAndroidTest
            ./gradlew libs:MobileSync:assembleAndroidTest
            ./gradlew libs:SalesforceHybrid:assembleAndroidTest
            ./gradlew libs:SalesforceReact:assembleAndroidTest
            ./gradlew native:NativeSampleApps:RestExplorer:assembleDebug
      - run:
          name: Authorize gcloud and set config defaults
          command: |
            echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project mobile-apps-firebase-test
      - run:
          name: Run << parameters.lib >> Tests with API << parameters.api_level >>
          command: |
            if (( << parameters.api_level >> < 31 ))
            then
              export DEVICE="NexusLowRes"
            else
              export DEVICE="MediumPhone.arm"
            fi

            gcloud firebase test android run \
                --project mobile-apps-firebase-test \
                --type instrumentation \
                --app "native/NativeSampleApps/RestExplorer/build/outputs/apk/debug/RestExplorer-debug.apk" \
                --test=libs/<< parameters.lib >>/build/outputs/apk/androidTest/debug/<< parameters.lib >>-debug-androidTest.apk \
                --device model=$DEVICE,version=<< parameters.api_level >>,locale=en,orientation=portrait  \
                --environment-variables coverage=true,coverageFile="/sdcard/coverage.ec"  \
                --directories-to-pull=/sdcard  \
                --results-dir=<< parameters.lib >>-${CIRCLE_BUILD_NUM}  \
                --results-history-name=<< parameters.lib >>  \
                --timeout=20m --no-auto-google-login --no-record-video --no-performance-metrics
          no_output_timeout: 20m
      - run:
          name: Copy test results data
          command: |
            gsutil ls gs://test-lab-w87i9sz6q175u-kwp8ium6js0zw/<< parameters.lib >>-${CIRCLE_BUILD_NUM} > /dev/null 2>&1
            if [ $? == 0 ]
            then
              mkdir -p firebase/results
              gsutil -m cp -r -U "`gsutil ls gs://test-lab-w87i9sz6q175u-kwp8ium6js0zw/<< parameters.lib >>-${CIRCLE_BUILD_NUM} | tail -1`*" ./firebase/
              mv firebase/test_result_1.xml firebase/results
            else
              echo "No test results found"
              exit 1
            fi
          when: always
      - when:
          condition: << parameters.pr >>
          steps:
            - run:
                name: Run Danger
                command: |
                  # These env vars are not set properly on rebuilds
                  export CIRCLE_PULL_REQUEST="https://github.com/forcedotcom/SalesforceMobileSDK-Android/${CIRCLE_BRANCH}"
                  export CIRCLE_PULL_REQUESTS="https://github.com/forcedotcom/SalesforceMobileSDK-Android/${CIRCLE_BRANCH}"
                  export CI_PULL_REQUEST="https://github.com/forcedotcom/SalesforceMobileSDK-Android/${CIRCLE_BRANCH}"
                  export CI_PULL_REQUESTS="https://github.com/forcedotcom/SalesforceMobileSDK-Android/${CIRCLE_BRANCH}"

                  if ls libs/<< parameters.lib >>/build/outputs/androidTest-results/connected/*.xml 1> /dev/null 2>&1; then
                       mv libs/<< parameters.lib >>/build/outputs/androidTest-results/connected/*.xml libs/<< parameters.lib >>/build/outputs/androidTest-results/connected/test-results.xml
                  fi
                  danger --dangerfile=.circleci/Dangerfile_Lib.rb --danger_id=<< parameters.lib >> --verbose
                background: true
                when: always
      - store_artifacts:
          path: firebase/
      - store_test_results:
          path: firebase/results

  test-rest-explorer:
    executor: linux
    parameters:
      api_level:
        type: integer
        default: *default-api-level
    steps:
      - checkout
      - restore_cache: *restore-gradle-cache
      - restore_cache: *restore-node-cache
      - restore_cache: *restore-ruby-cache
      - run: *setup-env
      - run:
          name: Build for Testing
          command: |
            ./gradlew native:NativeSampleApps:RestExplorer:assembleAndroidTest
            ./gradlew native:NativeSampleApps:RestExplorer:assembleDebug
      - run:
          name: Authorize gcloud and set config defaults
          command: |
            echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project mobile-apps-firebase-test
      - run:
          name: Run RestExplorer Tests with API << parameters.api_level >>
          command: |
            if (( << parameters.api_level >> < 31 ))
            then 
              export DEVICE="NexusLowRes"
            else
              export DEVICE="MediumPhone.arm"
            fi

            gcloud firebase test android run \
                --project mobile-apps-firebase-test \
                --type instrumentation \
                --app "native/NativeSampleApps/RestExplorer/build/outputs/apk/debug/RestExplorer-debug.apk" \
                --test "native/NativeSampleApps/RestExplorer/build/outputs/apk/androidTest/debug/RestExplorer-debug-androidTest.apk" \
                --device model=$DEVICE,version=<< parameters.api_level >>,locale=en,orientation=portrait \
                --environment-variables coverage=true,coverageFile="/sdcard/coverage.ec" \
                --directories-to-pull=/sdcard \
                --results-dir=RestExplorer-${CIRCLE_BUILD_NUM} \
                --results-history-name=RestExplorer \
                --timeout=20m --no-auto-google-login --no-record-video --no-performance-metrics
          no_output_timeout: 20m
      - run:
          name: Copy test results data
          command: |
            gsutil ls gs://test-lab-w87i9sz6q175u-kwp8ium6js0zw/RestExplorer-${CIRCLE_BUILD_NUM} > /dev/null 2>&1
            if [ $? == 0 ]
            then
              mkdir -p firebase/results
              gsutil -m cp -r -U "`gsutil ls gs://test-lab-w87i9sz6q175u-kwp8ium6js0zw/RestExplorer-${CIRCLE_BUILD_NUM} | tail -1`*" ./firebase/
              mv firebase/test_result_1.xml firebase/results
            else
              echo "No test results found"
              exit 1
            fi
          when: always
      - store_artifacts:
          path: firebase/
      - store_test_results:
          path: firebase/results

  generate-artifacts:
    executor: linux
    steps:
      - checkout
      - restore_cache: *restore-gradle-cache
      - restore_cache: *restore-node-cache
      - run: *setup-env
      - save_cache: *save-node-cache
      - run:
          name: Build Libraries
          command: |
            ./gradlew :libs:SalesforceAnalytics:assemble
            ./gradlew :libs:SalesforceSDK:assemble
            ./gradlew :libs:SmartStore:assemble
            ./gradlew :libs:MobileSync:assemble
            ./gradlew :libs:SalesforceHybrid:assemble
            ./gradlew :libs:SalesforceReact:assemble
          when: always
      - store_artifacts:
          path: libs/SalesforceAnalytics/build/outputs/aar/
          destination: libraries
      - store_artifacts:
          path: libs/SalesforceSDK/build/outputs/aar/
          destination: libraries
      - store_artifacts:
          path: libs/SmartStore/build/outputs/aar/
          destination: libraries
      - store_artifacts:
          path: libs/MobileSync/build/outputs/aar/
          destination: libraries
      - store_artifacts:
          path: libs/SalesforceHybrid/build/outputs/aar/
          destination: libraries
      - store_artifacts:
          path: libs/SalesforceReact/build/outputs/aar/
          destination: libraries
      - run:
          name: Build Native Sample Apps
          when: always
          command: |
            ./gradlew :native:NativeSampleApps:AppConfigurator:assemble
            ./gradlew :native:NativeSampleApps:ConfiguredApp:assemble
            ./gradlew :native:NativeSampleApps:RestExplorer:assemble
            ./gradlew :native:NativeSampleApps:MobileSyncExplorer:assemble
      - store_artifacts:
          path: native/NativeSampleApps/AppConfigurator/build/outputs/apk/
          destination: native-apps
      - store_artifacts:
          path: native/NativeSampleApps/ConfiguredApp/build/outputs/apk/
          destination: native-apps
      - store_artifacts:
          path: native/NativeSampleApps/RestExplorer/build/outputs/apk/
          destination: native-apps
      - store_artifacts:
          path: native/NativeSampleApps/MobileSyncExplorer/build/outputs/apk/
          destination: native-apps
      - run:
          name: Build Hybrid Sample Apps
          when: always
          command: |
            ./gradlew :hybrid:HybridSampleApps:AccountEditor:assemble
            ./gradlew :hybrid:HybridSampleApps:NoteSync:assemble
            ./gradlew :hybrid:HybridSampleApps:MobileSyncExplorerHybrid:assemble
      - store_artifacts:
          path: hybrid/HybridSampleApps/AccountEditor/build/outputs/apk/
          destination: hybrid-apps
      - store_artifacts:
          path: hybrid/HybridSampleApps/NoteSync/build/outputs/apk/
          destination: hybrid-apps
      - store_artifacts:
          path: hybrid/HybridSampleApps/MobileSyncExplorerHybrid/build/outputs/apk/
          destination: hybrid-apps
      - save_cache: *save-gradle-cache

#  Potential parameters that can come from the project GUI Triggers
parameters:
  api-level:
    type: integer
    default: *default-api-level

workflows:
  version: 2

  pr-tests:
    when:
      and:
        - equal: [ "webhook", << pipeline.trigger_source >> ]
        - matches:
            pattern: "^pull/\\d+$"
            value: << pipeline.git.branch >>
    jobs:
      - static-analysis:
          context: Android Unit Tests
      - run-tests:
          name: << matrix.lib >>
          context: Android Unit Tests
          matrix:
            parameters:
              lib: [ "SalesforceAnalytics", "SalesforceSDK", "SmartStore", "MobileSync", "SalesforceHybrid", "SalesforceReact" ]
              api_level: [ << pipeline.parameters.api-level >> ]
              pr: [ true ]

  # GUI Driven "Triggers" Schedule
  # Monday    8 PM - API 24
  # Monday    9 PM - API 26
  # Monday   10 PM - API 27
  # Monday   11 PM - API 30
  # Tuesday  12 AM - API 32
  # Friday    8 PM - API 25
  # Friday    9 PM - API 27
  # Friday   10 PM - API 29
  # Friday   11 PM - API 31
  # Saturday 12 AM - API 33
  nightly-tests:
    when:
      not:
        equal: [ "webhook", << pipeline.trigger_source >> ]
    jobs:
      - run-tests:
          name: << matrix.lib >> API << pipeline.parameters.api-level >>
          context: Android Unit Tests
          matrix:
            parameters:
              lib: [ "SalesforceAnalytics", "SalesforceSDK", "SmartStore", "MobileSync", "SalesforceHybrid", "SalesforceReact" ]
              api_level: [ << pipeline.parameters.api-level >> ]
      - test-rest-explorer:
          name: RestExplorer API << pipeline.parameters.api-level >>
          context: Android Unit Tests
          matrix:
            parameters:
              api_level: [ << pipeline.parameters.api-level >> ]
      - generate-artifacts

