import org.apache.tools.ant.taskdefs.condition.Os

buildscript {
    repositories {
        jcenter()
    }


    dependencies {
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

dependencies {
  api project(':libs:SmartSync')
  api 'com.facebook.react:react-native:0.53.3'

  androidTestApi 'com.android.support.test:runner:1.0.1'
  androidTestApi 'com.android.support.test:rules:1.0.1'
}

android {
  compileSdkVersion 27
  buildToolsVersion '27.0.3'

  buildTypes {
    debug {
      testCoverageEnabled = true
    }
  }

  sourceSets {
    main {
      manifest.srcFile 'AndroidManifest.xml'
      java.srcDirs = ['src']
      resources.srcDirs = ['src']
      aidl.srcDirs = ['src']
      renderscript.srcDirs = ['src']
      res.srcDirs = ['res']
      assets.srcDirs = ['assets']
    }
    androidTest.setRoot('../test/SalesforceReactTest')
    androidTest {
      java.srcDirs = ['../test/SalesforceReactTest/src']
      resources.srcDirs = ['../test/SalesforceReactTest/src']
      res.srcDirs = ['../test/SalesforceReactTest/res']
    }
  }

  defaultConfig {
    testApplicationId "com.salesforce.androidsdk.salesforcereact.tests"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  packagingOptions {
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/NOTICE'
  }
  
  lintOptions {
    xmlReport true
    abortOnError false
  }
}

def assetsFolder = new File('libs/test/SalesforceReactTest/assets')
def reactTestsBundleFile = new File(assetsFolder, 'index.android.bundle')

task buildReactTestBundle(type:Exec) {
  if (Os.isFamily(Os.FAMILY_WINDOWS)) {
    commandLine("cmd", "/c", "node", "node_modules/react-native/local-cli/cli.js", "bundle", "--platform", "android", "--dev", "true",
        "--entry-file", "node_modules/react-native-force/test/alltests.js", "--bundle-output", reactTestsBundleFile.absolutePath,
        "--assets-dest", assetsFolder.absolutePath)
  } else {
    commandLine("/usr/local/bin/node", "node_modules/react-native/local-cli/cli.js", "bundle", "--platform", "android", "--dev", "true",
        "--entry-file", "node_modules/react-native-force/test/alltests.js", "--bundle-output", reactTestsBundleFile.absolutePath,
        "--assets-dest", assetsFolder.absolutePath)
  }
}

task buildReactTestBundleIfNotExists {
  doLast {
    if (!reactTestsBundleFile.exists()) {
      assetsFolder.mkdirs()
      tasks.buildReactTestBundle.execute()
    }
  }
}

afterEvaluate {
  // Generate react tests bundle first
  preDebugAndroidTestBuild.dependsOn(buildReactTestBundleIfNotExists)

  // Find all connected Android tests and ensure they log all passed tests. This keeps the Travis
  // from timing out since executing tests are printed to the console.
  tasks.matching { it.name ==~ /^connected.*AndroidTest$/ }*.logging*.setLevel(LogLevel.INFO)
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name 'SalesforceReact'
                url 'https://github.com/forcedotcom/SalesforceMobileSDK-Android'
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'bhariharan'
                        name 'Bharath Hariharan'
                        email 'bhariharan@salesforce.com'
                    }
                }
                scm {
                    connection 'https://github.com/forcedotcom/SalesforceMobileSDK-Android.git'
                    developerConnection 'https://github.com/forcedotcom/SalesforceMobileSDK-Android.git'
                    url 'https://github.com/forcedotcom/SalesforceMobileSDK-Android'

                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

artifacts {
    archives sourcesJar
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    configurations = ['archives']
    pkg {
        repo = 'salesforcemobilesdk'
        name = 'salesforce-react'
        userOrg = 'forcedotcom'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/forcedotcom/SalesforceMobileSDK-Android.git'
        websiteUrl = 'https://github.com/forcedotcom/SalesforceMobileSDK-Android'
        issueTrackerUrl = 'https://github.com/forcedotcom/SalesforceMobileSDK-Android/issues'
        publicDownloadNumbers = true
        githubRepo = 'forcedotcom/SalesforceMobileSDK-Android'
        githubReleaseNotesFile = 'README.md'
        licenses = ['Apache-2.0']
        labels = ['android', 'salesforce', 'mobilesdk']
        version {
            name = '6.1.0'
            released  = new Date()
            vcsTag = 'v6.1.0'
        }
    }
}
