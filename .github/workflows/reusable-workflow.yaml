on:
  workflow_call:
    inputs:
      lib:
        required: true
        type: string
      is_pr:
        type: boolean
        default: false

jobs:
  test-android:
    runs-on: ubuntu-latest
    env:
      BUNDLE_GEMFILE: ${{ github.workspace }}/.github/DangerFiles/Gemfile
    steps:
      - uses: actions/checkout@v4
        if: ${{ inputs.is_pr }}
        with:
          # We need a sufficient depth or Danger will occasionally run into issues checking which files were modified.
          fetch-depth: 100
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/checkout@v4
        if: ${{ ! inputs.is_pr }}
        with:
          ref: ${{ github.head_ref }}
      - name: Install Dependencies
        env:
          TEST_CREDENTIALS: ${{ secrets.TEST_CREDENTIALS }}
        run: |
          ./install.sh
          echo $TEST_CREDENTIALS > ./shared/test/test_credentials.json
      - name: Hybrid Dependencies
        if: ${{ inputs.lib == 'SalesforceHybrid' }}
        run: |
          npm install -g cordova
          cordova telemetry off
      - name: React Native Dependencies
        if: ${{ inputs.lib  == 'SalesforceReact' }}
        run: npm install -g typescript
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
      - uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: "8.7"
          add-job-summary: on-failure
          add-job-summary-as-pr-comment: on-failure
      - name: Run Lint
        if: ${{ inputs.is_pr }}
        run: ./gradlew libs:${{ inputs.lib }}:lint
      - uses: ruby/setup-ruby@v1
        if: ${{ inputs.is_pr }}
        with:
          ruby-version: '3.2'
          bundler-cache: true
      - name: Report Static Analysis
        if: ${{ inputs.is_pr }}
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LIB: ${{ inputs.lib }}
        run: bundle exec danger --dangerfile=.github/DangerFiles/StaticAnalysis.rb --danger_id="${{ inputs.lib }}"
      - name: Build for Testing
        if: success() || failure()
        run: |
          ./gradlew libs:${{ inputs.lib }}:assembleAndroidTest
          ./gradlew native:NativeSampleApps:RestExplorer:assembleDebug
      - uses: 'google-github-actions/auth@v2'
        if: success() || failure()
        with:
          credentials_json: '${{ secrets.GCLOUD_SERVICE_KEY }}'
      - uses: 'google-github-actions/setup-gcloud@v2'
        if: success() || failure()
      - name: Run Tests
        continue-on-error: true
        if: success() || failure()
        env:
          # Most used according to https://gs.statcounter.com/android-version-market-share/mobile-tablet/worldwide
          PR_API_VERSION: "34"
          FULL_API_RANGE: "28 29 30 31 32 33 34 35"
          IS_PR: ${{ inputs.is_pr }}
        run: |
          LEVELS_TO_TEST=$FULL_API_RANGE
          RETRIES=0

          if $IS_PR ; then
            LEVELS_TO_TEST=$PR_API_VERSION
            RETRIES=2
          fi

          mkdir firebase_results
          for LEVEL in $LEVELS_TO_TEST
            do
              GCLOUD_RESULTS_DIR=${{ inputs.lib }}-api-${LEVEL}-build-${{github.run_number}}

              gcloud firebase test android run \
                --project mobile-apps-firebase-test \
                --type instrumentation \
                --app "native/NativeSampleApps/RestExplorer/build/outputs/apk/debug/RestExplorer-debug.apk" \
                --test=libs/${{ inputs.lib }}/build/outputs/apk/androidTest/debug/${{ inputs.lib }}-debug-androidTest.apk \
                --device model=MediumPhone.arm,version=${LEVEL},locale=en,orientation=portrait \
                --environment-variables coverage=true,coverageFile="/sdcard/coverage.ec" \
                --directories-to-pull=/sdcard \
                --results-dir=${GCLOUD_RESULTS_DIR} \
                --results-history-name=${{ inputs.lib }} \
                --timeout=20m --no-auto-google-login --no-record-video --no-performance-metrics \
                --num-flaky-test-attempts=${RETRIES} || true
            done
      - name: Copy Test Results
        continue-on-error: true
        if: success() || failure()
        env:
          # Most used according to https://gs.statcounter.com/android-version-market-share/mobile-tablet/worldwide
          PR_API_VERSION: "34"
          FULL_API_RANGE: "28 29 30 31 32 33 34 35"
          IS_PR: ${{ inputs.is_pr }}
        run: |
          LEVELS_TO_TEST=$FULL_API_RANGE

          if $IS_PR ; then
            LEVELS_TO_TEST=$PR_API_VERSION
          fi

          for LEVEL in $LEVELS_TO_TEST
            do
              GCLOUD_RESULTS_DIR=${{ inputs.lib }}-api-${LEVEL}-build-${{github.run_number}}

              gsutil ls gs://test-lab-w87i9sz6q175u-kwp8ium6js0zw/${GCLOUD_RESULTS_DIR} > /dev/null 2>&1
              if [ $? == 0 ] ; then
                mkdir firebase_${LEVEL}
                gsutil -m cp -r -U "`gsutil ls gs://test-lab-w87i9sz6q175u-kwp8ium6js0zw/${GCLOUD_RESULTS_DIR} | tail -1`*" ./firebase_${LEVEL}/
                mv firebase_${LEVEL}/test_result_1.xml firebase_results/api_${LEVEL}_test_result.xml
              fi
            done

            # Move one result to the directory expected for code coverge.
            mv firebase_${PR_API_VERSION} firebase
      - name: Test Report
        uses: mikepenz/action-junit-report@v5
        if: success() || failure()
        with:
          check_name: ${{ inputs.lib }} Test Results
          job_name: ${{ inputs.lib }} Test Results
          require_tests: true
          check_retries: true
          flaky_summary: true
          fail_on_failure: true
          detailed_summary: true
          group_reports: false
          include_passed: true
          skip_success_summary: true
          include_empty_in_summary: false
          simplified_summary: true
          report_paths: 'firebase_results/**.xml'
      - name: Convert Code Coverage
        if: success() || failure()
        run: ./gradlew libs:${{ inputs.lib }}:convertCodeCoverage
      - uses: codecov/codecov-action@v5
        if: success() || failure()
        with:
          files: libs/${{ inputs.lib }}/build/reports/jacoco/convertedCodeCoverage/convertedCodeCoverage.xml
          flags: ${{ inputs.lib }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
